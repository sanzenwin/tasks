name: Linux generate chromium docker src code
on:
  push:
    tags:
      - 'chromium-linux-docker-src-code-[0-9]+.[0-9]+.[0-9]+.[0-9]+*'
jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:
      - run: df -h $HOME
      - uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - run: df -h $HOME
      - uses: actions/setup-python@v4
        with:
          python-version: 3
      - uses: pdm-project/setup-pdm@v3
      - uses: actions/checkout@v3
        with:
          repository: sanzenwin/dekchromium
          token: ${{ secrets.PAT }}
          path: .temp
      - run: |
          pdm add deksoftware --global
          cd .temp
          dektools file remove ./dist && pdm build && deksoftware install whl --path ./dist
          cd ..
          dektools file remove .temp
      - uses: actions/checkout@v3
      - run: dekshell rf upload1.pysh
      - uses: actions/upload-artifact@v4
        with:
          name: tar-xz
          path: |
            *.tar.xz
  pack:
    needs: fetch
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - run: df -h $HOME
      - uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true
      - run: df -h $HOME
      - uses: actions/setup-python@v4
        with:
          python-version: 3
      - uses: pdm-project/setup-pdm@v3
      - uses: actions/checkout@v3
        with:
          repository: sanzenwin/dekchromium
          token: ${{ secrets.PAT }}
          path: .temp
      - run: |
          pdm add deksoftware --global
          cd .temp
          dektools file remove ./dist && pdm build && deksoftware install whl --path ./dist
          cd ..
          dektools file remove .temp
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v4
        with:
          name: tar-xz
      - env:
          GITHUB__DOCKER_REGISTRY: ghcr.io
          GITHUB__DOCKER_USERNAME: ${{ github.actor }}
          GITHUB__DOCKER_PASSWORD: ${{ secrets.GHCR_DOCKER_HUB_PASSWORD }}

          ALIYUN__DOCKER_REGISTRY: registry.cn-shenzhen.aliyuncs.com
          ALIYUN__DOCKER_USERNAME: ${{ secrets.ALIYUN_DOCKER_HUB_USERNAME }}
          ALIYUN__DOCKER_PASSWORD: ${{ secrets.ALIYUN_DOCKER_HUB_PASSWORD }}
        run: dekshell rf docker.pysh
